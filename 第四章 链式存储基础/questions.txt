1.（单链表的创建与输出）请用链表的形式存储用户输入的n个整数。要求使用堆内存，注意内存的分配和释放。
【输入】第一行整数n，第二行n个整数
【输出】n个整数之和
例如：
【输入】
5
3 6 9 10 1
【输出】
29

2.（单链表的下标访问）请编写程序输出单链表中对应于下标i到下标j之间的数据。
【输入】第一行整数n(1<=n)
第二行n个整数
第三行i的值 j的值（i和j为合法下标，j >= i）
【输出】下标i到j之间的数值
例如：
【输入】
5
3 6 9 10 1
0 2
【输出】
3 6 9

3.（单链表的指定值插入）请编写程序在单链表的值为x的元素之后均插入值为y的元素，并输出所有的插入位置。
【输入】第一行整数n(1<=n)
第二行为单链表中的n个整数
第三行 x（x在单链表中存在）y要插入的整数，x和y均为int类型，且不相等
【输出】y插入在单链表中的下标位置
例如：
【输入】
5
3 6 9 10 1
6 7   //在所有的数字6后面插入数字7
【输出】
2     //7插入后的位置
【输入】
5
3 6 9 6 1
6 7   //在所有的数字6后面插入数字7
【输出】
2 5   //7插入后的位置

4.（删除单链表的指定值）请编写程序删除单链表中所有值为x的元素。并输出删除x后的链表信息。
【输入】第一行整数n(1<=n)
第二行为单链表中的n个整数
第三行 x，x为int类型
【输出】删除x后的单链表信息
例如：
【输入】
6
3 6 9 10 6 1
6
【输出】
3 9 10 1

5.（约瑟夫问题）n 个人围成一个圆圈，首先第1个人从1开始一个人一个人顺时针报数,  报到第m个人，令其出列。然后再从下一个人开始，从1顺时针报数，报到第m个人，再令其出列，…，如此下去,  直到圆圈中只剩一个人为止。此人即为优胜者。请用环形链表实现约瑟夫问题。
【输入】n(2<=n<=60) m(1<=m)
【输出】最后的胜利者编号（编号范围是1至n）
例如：
【输入】
8 3
【输出】
7

6.（链表置逆）设有一个表头指针为h的单链表。试设计一个算法，通过遍历一趟链表，将链表中所有结点的链接方向逆转。要求逆转结果链表的表头指针h指向原链表的最后一个结点。
【输入】第一行整数n(1<=n)
第二行为单链表中的n个整数
【输出】置逆后的单链表信息
例如：
【输入】
6
3 6 9 10 6 1
【输出】
1 6 10 9 6 3

7.（删除链表中的重复元素）请编写程序删除链表中的多余节点，即：若链表中有多个节点具有相同的值，则只保留其中的一个节点即可，使得处理后的链表中的值各不相同。
【输入】第一行整数n(1<=n)
第二行为单链表中的n个整数
【输出】删除链表中的重复元素后的单链表信息
例如：
【输入】
9
3 6 9 10 6 1 3 10 6
【输出】
3 6 9 10 1