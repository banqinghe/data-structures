1. 请用递归的方式实现二进制向十进制转换。
【输入】 二进制序列，长度小于20
【输出】 二进制对应的10进制数
例如：
【输入】111001 
【输出】57

2. Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.
A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.
2->abc
3->def
4->ghi
5->jkl
6->mno
7->pqrs
8->tuv
9->wxyz
 数字对应字母的图片参考第五章资料文件
【输入】 2-9之间的数字串，长度不超过10，
【输出】 数字串对应的所有字母组合
例如：
【输入】 
23
【输出】
ad ae af bd be bf cd ce cf
【输入】 
22
【输出】
aa ab ac ba bb bc ca cb cc

3. 给定整数n，n<=10，请求出n的全排列。
N=3时，1-3的排列可以为：
1:1 2 3
2:1 3 2
3:2 1 3
4:2 3 1
5:3 1 2
6:3 2 1
一共有6种情况
【输入】 整数n，n<=20
【输出】 
1-n的排列 （排列数大于10的，仅输出前10组即可）
总的全排列数
例如：
【输入】 4
【输出】 
1:1 2 3 4
2:1 2 4 3
3:1 3 2 4
4:1 3 4 2
5:1 4 2 3
6:1 4 3 2
7:2 1 3 4
8:2 1 4 3
9:2 3 1 4
10:2 3 4 1
24

4. A maze is to be represented by a 12*12 array composed of three values: Open, Wall, or Exit. There is one exit from the maze. Write a program to determine whether it is possible to exit the maze from the starting point (any open square can be a starting point). You may move vertically and horizontally to any adjacent open square(左右上下四个方向). You may not move to a square containing a wall. The input consists of a series of 12 lines of 12 characters each, representing the contents of each square in the maze. The characters are O, W, or E.
【输入】 12×12的迷宫方阵，每个格子的可能取值有：O, W, or E，输入数据能够确保迷宫只有一个出口。
任意3个起点的坐标,格式如下(x,y)。其中x为纵坐标，y为横坐标，起始坐标从左上角的格子开始，坐标起始值为0.
【输出】 
起点到出口的最短路径长度（经过多少个方格），若起点无法到达出口则输出-1。起始节点和结束节点都算入路径长度的计算。

例如：
【输入】 
O	W	O	W	O	W	O	O	W	O	W	O
O	W	O	W	W	W	W	O	W	O	O	E
O	W	W	W	O	O	O	O	O	O	O	O
W	W	W	O	O	O	O	W	W	W	O	W
O	O	O	O	W	W	W	O	O	O	O	O
O	O	W	O	W	O	W	O	W	O	W	W
O	W	W	O	O	O	W	W	O	O	O	W
O	O	W	O	O	W	W	W	O	O	O	O
O	O	O	W	O	O	O	O	W	W	W	W
W	W	W	O	O	O	O	W	W	W	O	O
O	W	W	W	W	O	O	O	O	O	W	W
W	W	W	O	O	O	O	O	W	W	W	W
(0,0) (5,7) (7,8)
【输出】 
-1 9 10